# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json




x-common-env: &common-env
  TZ: ${TZ:-America/Chicago} # Your Timezone
  PUID: ${PUID:-1002}
  PGID: ${PGID:-988}
  UMASK: ${UMASK:-002}

x-common-uidgid: &common-uidgid
  user: ${PUID:-1002}:${PGID:-988}

services:
  glances:
    # ðŸ”¹ðŸ”¹ Glances ðŸ”¹ðŸ”¹
    image: nicolargo/glances
    container_name: glances
    hostname: glances
    <<: *common-uidgid
    expose:
      - ${GLANCES_PORT:-61208}
      - ${GLANCES_PORT2:-61209}
    pid: host
    volumes:
      - ${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock
    environment:
      <<: *common-env
    #      GLANCES_OPT: ${GLANCES_OPT:-"-w"}
    labels:
      traefik.enable: true
      traefik.http.services.glances.loadbalancer.server.port: 61208
      homepage.group: System Monitoring
      homepage.name: Glances
      homepage.icon: glances.png
      homepage.href: http://glances.$DOMAIN
      homepage.description: A cross-platform monitoring tool that provides a detailed overview of your system's performance and resources.
    restart: always

  umami_postgres:
    image: postgres:17.4
    restart: always
    container_name: umami_postgres
    <<: *common-uidgid
    volumes:
      - ${CONFIG_PATH:-./volumes}/umami/postgres:/var/lib/postgresql/data
    environment:
      <<: *common-env
      POSTGRES_DB: ${UMAMI_POSTGRES_DB:-umami}
      POSTGRES_USER: ${UMAMI_POSTGRES_USER:-umami}
      POSTGRES_PASSWORD: ${UMAMI_POSTGRES_PASSWORD:-umami}
    networks:
      - infranet
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  umami:
    depends_on:
      umami_postgres:
        condition: service_healthy
    image: ghcr.io/umami-software/umami:postgresql-latest
    container_name: umami
    networks:
      - infranet
    <<: *common-uidgid
    secrets:
      - umami_app_secret
    environment:
      <<: *common-env
      DATABASE_URL: postgresql://${UMAMI_POSTGRES_USER:-umami}:${UMAMI_POSTGRES_PASSWORD:-umami}@umami_postgres:5432/${UMAMI_POSTGRES_DB:-umami}
      DATABASE_TYPE: postgresql
      APP_SECRET: /run/secrets/umami_app_secret
    labels:
      traefik.enable: true
      traefik.http.services.umami.loadbalancer.server.port: 3000
    healthcheck:
      test: [ "CMD-SHELL", "curl http://127.0.0.1:3000/api/heartbeat" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  librespeed:
    image: ghcr.io/librespeed/speedtest-rust
    container_name: librespeed
    hostname: librespeed
    networks:
      - infranet
      - traefik_public
    expose:
      - 8080
    <<: *common-uidgid
    read_only: true
    cap_drop:
      - ALL
    volumes:  # touch ${CONFIG_PATH:-./volumes}/librespeed-rs/config.toml
      - ${CONFIG_PATH:-./volumes}/librespeed-rs:/usr/local/bin
    cpu_count: 2
    mem_limit: 500M
    memswap_limit: 500M
    labels:
      traefik.enable: true
      traefik.http.routers.librespeed.middlewares: nginx-auth@file  # authelia@docker
      traefik.http.services.librespeed.loadbalancer.server.port: 8080
      homepage.group: Utilities
      homepage.name: Librespeed
      homepage.icon: librespeed.png
      homepage.href: https://librespeed.$DOMAIN
      homepage.description: A simple, fast, and reliable speed test tool for measuring internet connection speed.
    restart: always

secrets:
  umami_app_secret:
    file: ${SECRETS_DIR:-./secrets}/umami_app_secret

# generate secrets
# openssl rand -base64 32 | tr -d '/+=' | cut -c1-64 > ./secrets/umami_app_secret
