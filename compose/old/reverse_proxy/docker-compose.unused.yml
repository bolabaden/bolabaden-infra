
x-common-env: &common-env
  TZ: ${TZ:-America/Chicago} # Your Timezone
  PUID: ${PUID:-1002}
  PGID: ${PGID:-988}
  UMASK: ${UMASK:-002}


x-common-uidgid: &common-uidgid
  user: ${PUID:-1002}:${PGID:-988}


x-common-deploy: &common-deploy
  restart_policy:
    condition: on-failure
    delay: 5s
    window: 120s
  labels:
    autoheal: "true"
    swarm.autoscaler: "true"


services:
#   # Optional: Caddy reverse proxy. See https://github.com/nextcloud/all-in-one/discussions/575
#   # Alternatively, use Tailscale if you don't have a domain yet. See https://github.com/nextcloud/all-in-one/discussions/5439
#   # Hint: You need to uncomment APACHE_PORT: 11000 above, adjust cloud.example.com to your domain and uncomment the necessary docker volumes at the bottom of this file in order to make it work
#   # You can find further examples here: https://github.com/nextcloud/all-in-one/discussions/588
  caddy:
    image: docker.io/lucaslorentz/caddy-docker-proxy:ci-alpine
    container_name: caddy
    hostname: caddy
    ports:
      - ${CADDY_PORT:-80}:80
      - ${CADDY_PORT:-443}:443
    networks:
      - infranet
    volumes:
      - ${DOCKER_SOCKET:-/var/run/docker.sock}:/var/run/docker.sock:z
      - ${CONFIG_PATH:-./volumes}/caddy/config:/config
      - ${CONFIG_PATH:-./volumes}/caddy/data:/data
      - ${CONFIG_PATH:-./volumes}/caddy/sites:/srv
      - ${ROOT_DIR:-.}/certs/caddy:/certs
    environment:
      <<: *common-env
#      CADDY_CONTROLLER_NETWORK: <string>
#      CADDY_DOCKER_APIS_VERSION: <string>
#      CADDY_DOCKER_CADDYFILE_PATH: <string>
#      CADDY_DOCKER_CERTS_PATH: <string>
#      CADDY_DOCKER_ENVFILE: <string>
#      CADDY_DOCKER_LABEL_PREFIX: <string>
#      CADDY_DOCKER_MODE: <string>
#      CADDY_DOCKER_NO_SCOPE: <bool, default scope used>
#      CADDY_DOCKER_POLLING_INTERVAL: <duration>
#      CADDY_DOCKER_PROCESS_CADDYFILE: <bool>
#      CADDY_DOCKER_PROXY_SERVICE_TASKS: <bool>
#      CADDY_DOCKER_SCAN_STOPPED_CONTAINERS: <bool>
#      CADDY_DOCKER_SOCKETS: <string>
      CADDY_INGRESS_NETWORKS: infranet
    configs:
      - source: ${CONFIG_PATH:-./volumes}/caddy/Caddyfile
        target: /etc/caddy/Caddyfile
    cpus: 0.1
    mem_reservation: 200M
    restart: always

  nginx-proxy-manager:
    image: docker.io/jc21/nginx-proxy-manager
    container_name: nginx-proxy-manager
    hostname: nginx-proxy-manager
    ports:
      - 80:80
      - 81:81
      - 443:443
    volumes:
      - ${CONFIG_PATH:-./volumes}/npm/data:/data
      - ${CONFIG_PATH:-./volumes}/npm/npm_ssl:/etc/nginx/certs
      - ${CONFIG_PATH:-./volumes}/letsencrypt:/etc/letsencrypt
      - ${CONFIG_PATH:-./volumes}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    environment:
      <<: *common-env
      SUBDOMAIN: ${SUBDOMAIN:-yourmediaserver}
      DB_MYSQL_HOST: ${DB_MYSQL_HOST:-npm-db}
      DB_MYSQL_PORT: ${DB_MYSQL_PORT:-3306}
      DB_MYSQL_USER: ${DB_MYSQL_USER:-npm}
      DB_MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD:-npm}
      DB_MYSQL_NAME: ${DB_MYSQL_NAME:-npm}
    restart: always

  npm-db:
    image: docker.io/jc21/mariadb-aria
    container_name: npm-db
    hostname: npm-db
    volumes:
      - ${CONFIG_PATH:-./volumes}/npm/data:/var/lib/mysql
    environment:
      <<: *common-env
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    restart: always
