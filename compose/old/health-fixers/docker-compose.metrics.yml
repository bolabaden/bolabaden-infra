x-common-env: &common-env
  TZ: ${TZ:-America/Chicago} # Your Timezone
  PUID: ${PUID:-1002}
  PGID: ${PGID:-988}
  UMASK: ${UMASK:-002}

x-resource-limits: &resource-limits
  cpu_shares: 1024
  labels:
    autoheal: "true"

x-scrutiny-labels: &scrutiny-labels
  traefik.enable: "true"
  traefik.http.services.scrutiny.loadbalancer.server.port: 8080

services:
  scrutiny-influxdb:
    image: influxdb:2.2
    container_name: scrutiny-influxdb
    hostname: scrutiny-influxdb
    networks:
      - infranet
    ports:
      - ${SCRUTINY_INFLUXDB_PORT:-8086}:8086
    volumes:
      - ${CONFIG_PATH:-./volumes}/influxdb:/var/lib/influxdb2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: ${SCRUTINY_INFLUXDB_HEALTHCHECK_INTERVAL:-5s}
      timeout: ${SCRUTINY_INFLUXDB_HEALTHCHECK_TIMEOUT:-10s}
      retries: ${SCRUTINY_INFLUXDB_HEALTHCHECK_RETRIES:-20}

  scrutiny-web:
    image: ghcr.io/analogj/scrutiny:master-web
    container_name: scrutiny-web
    hostname: scrutiny-web
    networks:
      - infranet
    ports:
      - ${SCRUTINY_PORT:-8080}:8080
    <<: [*common-logging, *resource-limits]
    mem_limit: 500M
    memswap_limit: 500M
    cpu_count: 2
    cap_add:
      - SYS_RAWIO
    devices:
      - /dev/sda
    volumes:
      - /run/udev:/run/udev:ro
      - ${CONFIG_PATH:-./volumes}/scrutiny/scrutiny:/opt/scrutiny/config
      - ${CONFIG_PATH:-./volumes}/scrutiny/influxdb:/opt/scrutiny/influxdb
    environment:
      <<: *common-env
      SCRUTINY_INFLUXDB_HOST: ${SCRUTINY_INFLUXDB_HOST:-http://scrutiny-influxdb:8086}
      SCRUTINY_INFLUXDB_TOKEN: $SCRUTINY_INFLUXDB_TOKEN
      SCRUTINY_INFLUXDB_ORG: $SCRUTINY_INFLUXDB_ORG
      SCRUTINY_INFLUXDB_BUCKET: $SCRUTINY_INFLUXDB_BUCKET
    labels:
      <<: *scrutiny-labels
    healthcheck:
      test: curl -sSf http://localhost:8080
      interval: ${SCRUTINY_HEALTHCHECK_INTERVAL:-30s}
      timeout: ${SCRUTINY_HEALTHCHECK_TIMEOUT:-15s}
      retries: ${SCRUTINY_HEALTHCHECK_RETRIES:-4}
      start_period: ${SCRUTINY_HEALTHCHECK_START_PERIOD:-60s}

  scrutiny-collector:
    depends_on:
      scrutiny-web:
        condition: service_healthy
    image: ghcr.io/analogj/scrutiny:master-collector
    container_name: scrutiny-collector
    hostname: ${SCRUTINY_COLLECTOR_HOST_ID:-scrutiny-collector}
    networks:
      - infranet
    cap_add:
      - SYS_RAWIO
    devices:
      - /dev/sda
      - /dev/sdb
    volumes:
      - /run/udev:/run/udev:ro
    environment:
      COLLECTOR_API_ENDPOINT: 'http://scrutiny-web:8080'
      COLLECTOR_HOST_ID: ${SCRUTINY_COLLECTOR_HOST_ID:-scrutiny-collector}
      # If true forces the collector to run on startup (cron will be started after the collector completes)
      # see: https://github.com/AnalogJ/scrutiny/blob/master/docs/TROUBLESHOOTING_DEVICE_COLLECTOR.md#collector-trigger-on-startup
      COLLECTOR_RUN_STARTUP: ${SCRUTINY_COLLECTOR_RUN_STARTUP:-true}
