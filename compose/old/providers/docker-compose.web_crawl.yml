# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json

x-common-env: &common-env
  TZ: ${TZ:-America/Chicago} # Your Timezone
  PUID: ${PUID:-1002}
  PGID: ${PGID:-988}
  UMASK: ${UMASK:-002}

x-common-uidgid: &common-uidgid
  user: ${PUID:-1002}:${PGID:-988}

x-resource-limits: &resource-limits
  cpu_shares: 1024
  labels:
    autoheal: "true"

x-common-deploy: &common-deploy
  restart_policy:
    condition: on-failure
    delay: 5s
    window: 120s
  labels:
    autoheal: "true"
    swarm.autoscaler: "true"

x-swarm-resource-limits: &swarm-resource-limits
  resources:
    limits:
      cpus: "0.10"
      memory: 512M

x-swarm-preferences-worker-priority: &swarm-preferences-worker-priority
  placement:
    preferences:
      - spread: node.labels.worker_priority

x-swarm-constraints-worker-only: &swarm-constraints-worker-only
  placement:
    constraints:
      - node.role == worker

x-swarm-constraints-manager-only: &swarm-constraints-manager-only
  placement:
    constraints:
      - node.role == manager

x-browserless-labels: &browserless-labels
  traefik.enable: "true"
  traefik.http.services.browserless.loadbalancer.server.port: 3000

services:
  browserless:
    image: browserless/chrome
    container_name: browserless
    hostname: browserless
    <<: [*common-uidgid, *common-logging, *resource-limits]
    networks:
      - traefik_public
    ports:
      - ${BROWSERLESS_PORT:-2998}:3000
    ulimits:
      core:
        hard: 0
        soft: 0
    labels:
      <<: *browserless-labels
      homepage.group: Utilities
      homepage.name: Browserless
      homepage.icon: browserless.png
      homepage.href: https://browserless.$DOMAIN
      homepage.description: Browserless is a tool that allows you to run a headless browser in a container.
    deploy:
      <<: [*common-deploy, *swarm-resource-limits]
      labels:
        <<: *browserless-labels
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/pressure"]
      interval: 30s
      timeout: 10s
    restart: always

  firecrawl: 
    # ðŸ”¹ðŸ”¹ Firecrawl ðŸ”¹ðŸ”¹  # https://github.com/mendableai/firecrawl
    image: ghcr.io/mendableai/firecrawl
    container_name: firecrawl
    hostname: firecrawl
    <<: [*common-uidgid, *common-logging, *resource-limits]
    networks:
      - traefik_public
    ports:
      - "${FIRECRAWL_PORT:-3002}:${FIRECRAWL_PORT:-3002}"
    environment:
      <<: *common-env
      HOST: ${FIRECRAWL_HOST:-0.0.0.0}
      PORT: ${FIRECRAWL_PORT:-3002}
      FLY_PROCESS_GROUP: ${FLY_PROCESS_GROUP:-app}
      FIRECRAWL_API_KEY: $FIRECRAWL_API_KEY
      FIRECRAWL_CREDIT_ERROR_THRESHOLD: ${FIRECRAWL_CREDIT_ERROR_THRESHOLD:-100}
      FIRECRAWL_CREDIT_WARNING_THRESHOLD: ${FIRECRAWL_CREDIT_WARNING_THRESHOLD:-1002}
    labels:
      homepage.group: File Management
      homepage.name: FileFlows
      homepage.icon: fileflows.png
      homepage.href: https://$DOMAIN/fileflows/
      homepage.description: Automate file processing and organization with custom workflows, streamlining your file management tasks efficiently.
    deploy:
      <<: [*common-deploy, *swarm-resource-limits]
    depends_on:
      - playwright
      - redis
    command: [ "pnpm", "run", "start:production" ]
