# Zurg configuration version
zurg: v1

# Get your token for the next line from https://real-debrid.com/apitoken
token: "UFZDKT6N4WTXCHIAZH5QRHNTQDAD6LPCBN4IYKLL2JRA5HGPH4YQ"

# additional download tokens - uncomment the lines below, and populate this with your additional tokens to auto-overcome bandwidth limitation issues
download_tokens:
  - "TE6M7M2GGBN6H6XT2OZTUQIX42LEPJ4EIZIHTN73HAW2TJUZAFHA"

# basic functionality
host: "[::]" # do not change this if you are running it inside a docker container
port: 9999 # do not change this if you are running it inside a docker container
concurrent_workers: 32
check_for_changes_every_secs: 30

# misc configs
retain_folder_name_extension: true # if true, zurg won't modify the filenames from real-debrid
retain_rd_torrent_name: true # if true, it will strictly follow RD API torrent name property w/c should make this more compatible with rdt-client
auto_delete_rar_torrents: false # if true, zurg will delete unstreamable rar files (these torrents will always be compressed in a rar archive no matter what files you select)
use_download_cache: false # if true, during zurg initialization, it will fetch all downloads to unrestrict links faster

enable_repair: true
repair_every_mins: 60

###on_library_update: sh plex_update.sh "$$@"
ignore_renames: true

# do a RD speed test on every start
cache_network_test_results: false

# network configs
network_buffer_size: 1048576 # 1 MiB
serve_from_rclone: false
verify_download_link: true # if true, zurg will check if the link is truly streamable; only relevant if serve_from_rclone is set to true (as it already does this all the time if serve_from_rclone is false)
force_ipv6: false # force connect to real-debrid ipv6 addresses
rate_limit_sleep_secs: 6 # wait time after getting a 429 from Real-Debrid API
realdebrid_timeout_secs: 60 # api timeout
retries_until_failed: 5 # api failures until considered failed
get_torrents_count: 5000

rar_action: extract

addl_playable_extensions:
- avi
- flac
- m4b
- mkv
- mp3
- mp4

# List of directory definitions and their filtering rules
directories:
  audiobooks:
    group_order: 5
    group: media
    filters:
      - and:
        - is_music: true
        - media_info_duration_gte: 600

  music:
    group_order: 10
    group: media
    filters:
      - is_music: true

  anime:
    group_order: 15
    group: media
    filters:
      - regex: /\b[a-fA-F0-9]{8}\b/
      - any_file_inside_regex: /\b[a-fA-F0-9]{8}\b/

  shows:
    group_order: 20
    group: media
    filters:
      - has_episodes: true

  movies:
    group_order: 25
    group: media
    only_show_the_biggest_file: true
    filters:
      - regex: /.*/

restrict_repair_to_cached: true